CREATE DATABASE TiendaJF;

USE TiendaJF;

-- Tabla de roles
CREATE TABLE roles (
    id_rol INT AUTO_INCREMENT PRIMARY KEY,
    nombre_rol VARCHAR(50) NOT NULL
);

-- Tabla de usuarios
CREATE TABLE usuarios (
    id_usuario INT AUTO_INCREMENT PRIMARY KEY,
    nombre_usuario VARCHAR(100) NOT NULL,
    email_usuario VARCHAR(100) NOT NULL UNIQUE,
    password_usuario VARCHAR(255) NOT NULL,
    cedula_usuario VARCHAR(10) NOT NULL UNIQUE,
    id_rol INT NOT NULL,
    FOREIGN KEY (id_rol) REFERENCES roles(id_rol)
);

-- 1. Crear la Base de Datos (si no existe)
CREATE DATABASE IF NOT EXISTS tiendarmjf;
USE tiendarmjf;

-- 2. Crear tabla de roles (si no la tenías creada antes)
CREATE TABLE IF NOT EXISTS roles (
    id_rol INT AUTO_INCREMENT PRIMARY KEY,
    nombre_rol VARCHAR(100) NOT NULL
);

-- 3. Crear tabla de usuarios
CREATE TABLE IF NOT EXISTS usuarios (
    id_usuario INT AUTO_INCREMENT PRIMARY KEY,
    nombre_usuario VARCHAR(100) NOT NULL,
    email_usuario VARCHAR(100) NOT NULL UNIQUE,
    password_usuario VARCHAR(255) NOT NULL,
    cedula_usuario VARCHAR(10) NOT NULL UNIQUE,
    id_rol INT,
    FOREIGN KEY (id_rol) REFERENCES roles(id_rol)
);

-- 4. Crear tabla de marcas
CREATE TABLE IF NOT EXISTS marcas (
    id_marca INT AUTO_INCREMENT PRIMARY KEY,
    nombre_marca VARCHAR(100) NOT NULL,
    imagen_marca VARCHAR(255) NOT NULL
);

-- 5. Insertar marcas iniciales (ajusta o elimina la columna imagen_marca si no la necesitas)
INSERT INTO marcas (nombre_marca, imagen_marca) VALUES
('Vygon', 'vygon.jpg'),
('Mercury Medica', 'mercury.jpg'),
('Neotech', 'neotech.jpg'),
('Romsons', 'romsons.jpg'),
('GGM', 'ggm.jpg'),
('Global Health Care', 'global.jpg'),
('Wego', 'wego.jpg'),
('Aerogen', 'aerogen.jpg');

-- 6. Crear tabla de especialidades
CREATE TABLE IF NOT EXISTS especialidades (
    id_especialidad INT AUTO_INCREMENT PRIMARY KEY,
    nombre_especialidad VARCHAR(100) NOT NULL,
    foto_especialidad VARCHAR(250) NOT NULL
);

-- 7. Crear tabla de productos (SIN el campo medida_producto)
CREATE TABLE IF NOT EXISTS productos (
    id_producto INT AUTO_INCREMENT PRIMARY KEY,
    nombre_producto VARCHAR(100) NOT NULL,
    descripcion_producto TEXT,
    id_marca INT,
    imagen_producto VARCHAR(250) NOT NULL,
    FOREIGN KEY (id_marca) REFERENCES marcas(id_marca)
);

-- 8. Crear tabla intermedia para asociar productos con especialidades
-- (Eliminamos 'medida_producto' de esta tabla si no es necesario).
CREATE TABLE IF NOT EXISTS productos_especialidades (
    id_producto_especialidad INT AUTO_INCREMENT PRIMARY KEY,
    id_producto INT,
    id_especialidad INT,
    id_producto_medida INT,
    FOREIGN KEY (id_producto) REFERENCES productos(id_producto),
    FOREIGN KEY (id_especialidad) REFERENCES especialidades(id_especialidad)
);

-- 9. Nueva tabla para manejar múltiples medidas de un mismo producto
CREATE TABLE IF NOT EXISTS producto_medidas (
    id_producto_medida INT AUTO_INCREMENT PRIMARY KEY,
    id_producto INT NOT NULL,
    nombre_medida VARCHAR(50) NOT NULL,     -- "10 Fr", "500 ml", etc.
    costo_producto DECIMAL(10, 2) NOT NULL, -- Si el costo depende de la medida
    FOREIGN KEY (id_producto) REFERENCES productos(id_producto)
);

-- 10. Tabla de pedidos
CREATE TABLE IF NOT EXISTS pedidos (
    id_pedido INT AUTO_INCREMENT PRIMARY KEY,
    id_usuario INT,
    fecha_pedido DATETIME NOT NULL,
    total_pedido DECIMAL(10, 2) NOT NULL,
    estado_pedido VARCHAR(50) NOT NULL,
    FOREIGN KEY (id_usuario) REFERENCES usuarios(id_usuario)
);

-- 11. Tabla de detalles de pedidos
-- Se referencia la tabla producto_medidas para indicar la medida específica
CREATE TABLE IF NOT EXISTS detalles_pedidos (
    id_detalle_pedido INT AUTO_INCREMENT PRIMARY KEY,
    id_pedido INT,
    id_producto_medida INT,
    cantidad_pedido INT NOT NULL,
    precio_pedido DECIMAL(10, 2) NOT NULL,
    FOREIGN KEY (id_pedido) REFERENCES pedidos(id_pedido),
    FOREIGN KEY (id_producto_medida) REFERENCES producto_medidas(id_producto_medida)
);

-- 12. Tabla de entregas
CREATE TABLE IF NOT EXISTS entregas (
    id_entrega INT AUTO_INCREMENT PRIMARY KEY,
    id_pedido INT,
    fecha_entrega DATETIME NOT NULL,
    direccion_entrega VARCHAR(255) NOT NULL,
    estado_entrega VARCHAR(50) NOT NULL,
    FOREIGN KEY (id_pedido) REFERENCES pedidos(id_pedido)
);

-- 13. Insertar roles predefinidos (si aún no existen)
INSERT INTO roles (nombre_rol) VALUES 
    ('Administrador'), 
    ('Vendedor'), 
    ('Usuario');